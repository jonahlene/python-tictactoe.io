# Jonah Lene
# 7/28/20
# Milestone Project 1

# What the display board will look like.

def display_board(board):
    print(board[7]+'|'+board[8]+'|'+board[9])
    print('-|-|-')
    print(board[4]+'|'+board[5]+'|'+board[6])
    print('-|-|-')
    print(board[1]+'|'+board[2]+'|'+board[3])

test_board = [' ']*10
display_board(test_board)


def player_input():
    
    marker = ''
    
    while marker != 'X' and marker != 'O':
        marker = input('Player 1, choose X or O: ')
        
    player1 = marker
    
    if player1 == 'X':
        player2 = 'O'
    
    else:
        
        player2 = 'X'
        
        
    return(player1,player2)

player1_marker, player2_marker = player_input()

# This code asks the user's if they want to keep playing the game while the game is still running. 

def gameon_choice():
    
    choice = 'wrong'
    
    while choice not in ['Y','N']:
        
        choice = input('Keep playing? (Y or N): ')
        
        if choice not in ['Y','N']:
            print("Sorry, I don't understand, please choose Y or N ")
                          
    if choice == "Y":
        return True
    else: 
        return False

def place_marker(board, marker, position):
    board[position] = marker

place_marker(test_board,'X',9)

display_board(test_board)

def win_check(board,mark):
    # All the possible combinations to win the game. Diagnol, three up, three across.
    
    return ((board[7] == mark and board[8] == mark and board[9] == mark) or
    (board[4] == mark and board[5] == mark and board[6] == mark) or
    (board[1] == mark and board[2] == mark and board[3] == mark) or
    (board[7] == mark and board[5] == mark and board[3] == mark) or
    (board[1] == mark and board[5] == mark and board[9] == mark) or
    (board[7] == mark and board[4] == mark and board[1] == mark) or
    (board[2] == mark and board[5] == mark and board[8] == mark) or
    (board[9] == mark and board[6] == mark and board[3] == mark))


win_check(test_board,'X')

import random

def choose_first():
    if random.randint(0, 1) == 0:
        return 'Player 2'
    else:
        return 'Player 1'
  
# Helps return new board with the new symbol added

def space_check(board,position):
    
    return board[position] == ' '

def full_board_check(board):
    
    for x in range(1,10):
        if space_check(board, x):
            return False
    return True

def player_choice(board):
    position = 0
    
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board, position):
        position = int(input('Choose your next position: (1-9) '))
        
    return position

def replay():
    return input('Do you want to play again? Enter Yes or No: ')


print('Welcome to Tic Tac Toe!')

#while true

while True:
    test_board = [' ']*10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    
    
    print(turn + '  will go first')
    
    start_game = input('Are you ready to begin? Enter Yes or No: ')
    
    if start_game == 'Yes':
        
        game_on = True
    
    else:
        game_on = False
  

    #while game_on
    while game_on:
        # Player 1 turn
        if turn == 'Player 1':
            
            game_on = gameon_choice()
            display_board(test_board)
            position = player_choice(test_board)
            place_marker(test_board, player1_marker, position)
            
            if win_check(test_board, player1_marker):
                display_board(test_board)
                print('Congratulations! You have won the game!')
                game_on = False
            else:
                if full_board_check(test_board):
                    display_board(test_board)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 2'

            
            
        
        
        # Player2's turn.
        else:
            
           
            display_board(test_board)
            position = player_choice(test_board)
            place_marker(test_board, player2_marker, position)
             
            if win_check(test_board, player2_marker):
                
                display_board(test_board)
                print('Congratulations! You have won the game!')
                game_on = False
                
            else:
                
                if full_board_check(test_board):
                    display_board(test_board)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 1'
                    
                    
    if not replay():
        
        print(' Thanks for playing \m/ ')
        break